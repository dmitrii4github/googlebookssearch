# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
   
    - name: Upload a Build Artifact
      
      #uses: actions/upload-artifact@v4.3.3
      #with:
        #name: "myartifact"
        #path: "*.*"

      uses: jfrog/setup-jfrog-cli@v4
      env:
          # JFrog platform url (for example: https://acme.jfrog.io)
          JF_URL: https://auroratrial.jfrog.io/

          # Basic authentication credentials
          JF_USER: ovechq@gmail.com
          JF_PASSWORD: Aurora11!!

          # JFrog platform access token (if JF_USER and JF_PASSWORD are not provided)
          # JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

          # Same can be achieved with a Config Token using JF_ENV_1 environment variable
          # JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
        
      with:
        download-repository: jfrog-cli-remote

        #run: jfrog --version

        #run: jf rt dl artifacts
        #     jf rt u aether artifacts
        #     jf rt bp

        run: echo "test file " > test.txt
            export BUILD_NAME="my-build"
            export BUILD_MODULE="my-module"
            export BUILD_NUMBER="1"
            export PATH_TO_DIRECTORY="name/version/dates"
      
            jf rt upload "test.txt" jfrog-cli-remote/$PATH_TO_DIRECTORY --build-name $BUILD_NAME --build-number $BUILD_NUMBER --module $BUILD_MODULE
     
        name: Build to Artifactory
            jf rt build-publish $BUILD_NAME $BUILD_NUMBER
            jf rt bdi c --max-builds=1


    
